---
aliases:
  p: 'puppet agent --test'
  p_environment: >-
    grep environment /etc/puppetlabs/puppet/puppet.conf | awk "{print \$3}"
  p_enabled: >-
    sudo test -f /opt/puppetlabs/puppet/cache/state/agent_disabled.lock;
    if test $? -eq 0; then
    echo "puppet is disabled";
    sudo cat /opt/puppetlabs/puppet/cache/state/agent_disabled.lock
    | awk -F: "{print \$2}"
    | sed -e '\''s/["}]//g'\'';
    else
    echo "puppet is enabled";
    fi
  p_lookup: 'puppet lookup --merge deep --node'
  p_force: 'puppet agent -t --agent_disabled_lockfile=/nonexisting'
  p_test: 'puppet agent -t --noop --agent_disabled_lockfile=/nonexisting'
  puppet: 'sudo /opt/puppetlabs/bin/puppet'
  socks5: 'ssh -D 17798 -S /tmp/.ssh-skip-socks5-jdratlif -M -fN skip.grnoc.iu.edu; export SOCKS5_PROXY="localhost:17798"'
  socks5_kill: 'ssh -S /tmp/.ssh-skip-socks5-jdratlif -O exit skip.grnoc.iu.edu'

functions:
  p_disable:
    - >-
      if [ "x$1" = "x" ]; then msg="testing"; else msg=$1; fi
    - >-
      puppet agent --disable "$(date '+%Y-%m-%d') $(whoami) - $msg"
  p_logtest:
    - >-
      if [ "x$1" = "x" ]; then my_env="jdratlif"; else my_env=$1; fi
    - >-
      p_test -E "$my_env" | tee ~/puppet.log ; less -R ~/puppet.log
  perl_libs:
    - >-
      MY_LIBS=$(grep '^use' $1 | tr -d '\n')
    - >-
      perl -M'Data::Dump qw(pp)' -e "${MY_LIBS} pp(\%INC);"

gitconfig:
  name: 'John Ratliff'
  email: 'jdratlif@globalnoc.iu.edu'
  credentials:
    - name: 'https://github.grnoc.iu.edu'
      username: jdratlif
      helper: 'cache --timeout 43200'
